@model Cognify.Models.MemoryCustomizationViewModel
@{
    Layout = null;
}
<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <title>Cognify - Personalización de Recuerdos</title>
    <script src="https://cdn.tailwindcss.com"></script>
</head>
<body class="bg-gray-100">
    <div class="container mx-auto p-8">
        <h2 class="text-2xl font-bold mb-4">Personalice sus Recuerdos</h2>
        <p class="mb-4">
            <strong>Nombre:</strong> @Model.Name<br>
            <strong>Edad:</strong> @Model.Age<br>
            <strong>Tipo de Crimen:</strong> @Model.CrimeTypeDisplay
        </p>
        @using (Html.BeginForm("Customization", "Memory", FormMethod.Post))
        {
            @Html.AntiForgeryToken()
            @Html.HiddenFor(m => m.Name)
            @Html.HiddenFor(m => m.Age)
            @Html.HiddenFor(m => m.CrimeType)

            <div class="space-y-4">
                @if (Model.CrimeType == "violent")
                {
                    <div>
                        @Html.LabelFor(m => m.EmpathyLevel, "Intensidad de Empatía", new { @class = "block text-sm font-medium text-gray-700" })
                        @Html.TextBoxFor(m => m.EmpathyLevel, new { type = "range", min = "1", max = "10", @class = "mt-1 block w-full" })
                        @Html.ValidationMessageFor(m => m.EmpathyLevel)
                    </div>
                }
                else if (Model.CrimeType == "financial")
                {
                    <div>
                        @Html.LabelFor(m => m.LossAmount, "Monto Simulado de Pérdidas ($)", new { @class = "block text-sm font-medium text-gray-700" })
                        @Html.TextBoxFor(m => m.LossAmount, new { type = "number", min = "1000", step = "1000", @class = "mt-1 block w-full border border-gray-300 rounded-md p-2" })
                        @Html.ValidationMessageFor(m => m.LossAmount)
                    </div>
                }
                else if (Model.CrimeType == "hate")
                {
                    <div>
                        @Html.LabelFor(m => m.DiversityLevel, "Nivel de Diversidad", new { @class = "block text-sm font-medium text-gray-700" })
                        @Html.DropDownListFor(m => m.DiversityLevel, new SelectList(new[] {
                            new { Value = "low", Text = "Bajo" },
                            new { Value = "medium", Text = "Medio" },
                            new { Value = "high", Text = "Alto" }
                        }, "Value", "Text"), new { @class = "mt-1 block w-full border border-gray-300 rounded-md p-2" })
                        @Html.ValidationMessageFor(m => m.DiversityLevel)
                    </div>
                }
                <div class="text-right">
                    <button type="submit" class="py-2 px-4 bg-blue-500 text-white rounded hover:bg-blue-600">
                        Iniciar Simulación
                    </button>
                </div>
            </div>
        }
    </div>
</body>
</html>
